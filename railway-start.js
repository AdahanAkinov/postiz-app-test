const { spawnSync, spawn } = require('child_process');
const path = require('path');

console.log('üèóÔ∏è –ó–∞–ø—É—Å–∫–∞–µ–º —Å–±–æ—Ä–∫—É –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫—É –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è Railway...');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –∫–æ–º–∞–Ω–¥—ã —Å –æ–∂–∏–¥–∞–Ω–∏–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
function runCommand(command, args) {
  console.log(`üî® –í—ã–ø–æ–ª–Ω—è–µ–º: ${command} ${args.join(' ')}`);
  
  const result = spawnSync(command, args, {
    stdio: 'inherit',
    shell: true
  });
  
  if (result.status !== 0) {
    console.error(`‚ùå –ö–æ–º–∞–Ω–¥–∞ –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –æ—à–∏–±–∫–æ–π: ${result.status}`);
    process.exit(result.status);
  }
  
  return result;
}

// –°–±–æ—Ä–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
runCommand('npm', ['run', 'build']);

// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –º–∏–≥—Ä–∏—Ä–æ–≤–∞—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
if (process.env.SKIP_DB_PUSH !== 'true') {
  // –ú–∏–≥—Ä–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
  runCommand('npm', ['run', 'prisma-db-push']);
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
console.log('üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ...');
const app = spawn('node', ['start-all.js'], {
  stdio: 'inherit',
  shell: true
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞
app.on('close', (code) => {
  console.log(`‚ö†Ô∏è –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–∏–ª–æ —Ä–∞–±–æ—Ç—É —Å –∫–æ–¥–æ–º: ${code}`);
  process.exit(code);
}); 